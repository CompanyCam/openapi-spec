"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const baseCommand_1 = __importStar(require("../../lib/baseCommand"));
const getCategories_1 = __importDefault(require("../../lib/getCategories"));
const versionSelect_1 = require("../../lib/versionSelect");
class CategoriesCommand extends baseCommand_1.default {
    constructor() {
        super();
        this.command = 'categories';
        this.usage = 'categories [options]';
        this.description = 'Get all categories in your ReadMe project.';
        this.cmdCategory = baseCommand_1.CommandCategories.CATEGORIES;
        this.args = [this.getKeyArg(), this.getVersionArg()];
    }
    async run(opts) {
        await super.run(opts);
        const { key, version } = opts;
        const selectedVersion = await (0, versionSelect_1.getProjectVersion)(version, key);
        baseCommand_1.default.debug(`selectedVersion: ${selectedVersion}`);
        const allCategories = await (0, getCategories_1.default)(key, selectedVersion);
        return Promise.resolve(JSON.stringify(allCategories, null, 2));
    }
}
exports.default = CategoriesCommand;
