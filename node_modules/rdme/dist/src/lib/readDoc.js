"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = __importDefault(require("crypto"));
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const gray_matter_1 = __importDefault(require("gray-matter"));
const logger_1 = require("./logger");
/**
 * Returns the content, matter and slug of the specified Markdown or HTML file
 *
 * @param {String} filepath path to the HTML/Markdown file
 *  (file extension must end in `.html`, `.md`., or `.markdown`)
 */
function readDoc(filepath) {
    (0, logger_1.debug)(`reading file ${filepath}`);
    const rawFileContents = fs_1.default.readFileSync(filepath, 'utf8');
    const matter = (0, gray_matter_1.default)(rawFileContents);
    const { content, data } = matter;
    (0, logger_1.debug)(`front matter for ${filepath}: ${JSON.stringify(matter)}`);
    // Stripping the subdirectories and markdown extension from the filename and lowercasing to get the default slug.
    const slug = matter.data.slug || path_1.default.basename(filepath).replace(path_1.default.extname(filepath), '').toLowerCase();
    const hash = crypto_1.default.createHash('sha1').update(rawFileContents).digest('hex');
    return { content, data, hash, slug };
}
exports.default = readDoc;
